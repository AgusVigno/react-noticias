{"version":3,"sources":["components/Header.js","hooks/useSelect.js","components/Formulario.js","components/Noticia.js","components/ListadoNoticias.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["Header","titulo","className","href","useSelect","stateInicial","opciones","useState","state","actualizarState","value","onChange","e","target","map","opcion","key","label","Formulario","guardarCategoria","categoria","SelectNoticias","styles","buscador","onSubmit","preventDefault","heading","type","Noticia","noticia","urlToImage","url","title","description","source","imagen","src","alt","name","rel","ListadoNoticias","noticias","App","guardarNoticias","useEffect","a","fetch","resultado","json","articles","consultarAPI","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7a645749.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({titulo}) => {\n    return ( \n        <nav className=\"nav-wrapper light-blue darken-3\">\n            <a href=\"#!\" className=\"brand-logo center\">{titulo}</a>\n        </nav>\n    );\n}\n \nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\n\nexport default Header;","import React, {useState} from 'react';\n\n\nconst useSelect = (stateInicial, opciones) => {\n    \n    //state inicial del hook\n    const [state, actualizarState] = useState(stateInicial);\n\n    const SelectNoticias = () => (\n        <select\n            className=\"browser-default\"\n            value={state}\n            onChange={e => actualizarState(e.target.value)}\n        >\n        {opciones.map(opcion => (\n            <option key={opcion.value} value={opcion.value}>{opcion.label}</option>\n        ))}    \n\n        </select>\n    )\n\n    return [state, SelectNoticias];\n}\n \nexport default useSelect;","import React from 'react';\nimport styles from './Formulario.module.css';\nimport useSelect from '../hooks/useSelect';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({guardarCategoria}) => {\n\n    //opciones\n    const OPCIONES = [\n        {value: \"general\", label: \"General\"},\n        {value: \"business\", label: \"Negocios\"},\n        {value: \"entertainment\", label: \"Entretenimiento\"},\n        {value: \"health\", label: \"Salud\"},\n        {value: \"science\", label: \"Ciencia\"},\n        {value: \"sports\", label: \"Deporte\"},\n        {value: \"technology\", label: \"Tecnología\"}\n    ]\n\n    //utilizar el custom hook\n    const [categoria, SelectNoticias] = useSelect('general', OPCIONES);\n\n    //pasar al componente principal app.js\n    const buscarCategoria = e => {\n        e.preventDefault();\n\n        guardarCategoria(categoria);\n    }\n\n\n    return ( \n        <div className={`${styles.buscador} row`}>\n            <div className=\"col s12 m8 offset-m2\">\n                <form\n                    onSubmit={buscarCategoria}\n                >\n                    <h2 className={styles.heading}>Encuentra Noticias por Categoría</h2>\n                    \n                    <SelectNoticias />\n\n                    <div className=\"input-field col s12\">\n                        <input \n                            type=\"submit\"\n                            className={`${styles['btn-block']} btn-large amber darken-2`}\n                            value=\"Buscar\"\n                        />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nFormulario.propTypes = {\n    guardarCategoria: PropTypes.func.isRequired\n}\n \nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Noticia = ({noticia}) => {\n\n    //extraer los datos\n    const {urlToImage, url, title, description, source} = noticia;\n\n    const imagen = (urlToImage) ?\n        <div className=\"card-image\">\n            <img src={urlToImage} alt={title} />\n            <span className=\"card-title\">{source.name}</span>\n        </div>\n    : null;\n\n    return ( \n        <div className=\"col s12 m6 l4\">\n            <div className=\"card\">\n                \n                {imagen}\n\n                <div className=\"card-content\">\n                    <h3>{title}</h3>\n                    <p>{description}</p>\n                </div>\n\n                <div className=\"card-action\">\n                    <a\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"waves-effect waves-light btn\"\n                    >Ver Noticia Completa</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n \nNoticia.propTypes = {\n    noticia: PropTypes.object.isRequired\n}\n\nexport default Noticia;","import React from 'react';\nimport Noticia from './Noticia';\nimport PropTypes from 'prop-types';\n\nconst ListadoNoticias = ({noticias}) => {\n    return (\n        <div className=\"row\">\n            {noticias.map( noticia => (\n                <Noticia \n                    key={noticia.url}\n                    noticia={noticia}\n                />\n            ))}\n        </div>\n    );\n}\n\nListadoNoticias.propTypes = {\n    noticias: PropTypes.array.isRequired\n}\n \nexport default ListadoNoticias;","import React, {Fragment, useState, useEffect} from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport ListadoNoticias from './components/ListadoNoticias';\n\nfunction App() {\n\n\t//definir la categoria y las noticias\n\tconst [categoria, guardarCategoria] = useState('');\n\tconst [noticias, guardarNoticias] = useState([]);\n\n\tuseEffect(() => {\n\t\t//consultar en la API\n\t\tconst consultarAPI = async () => {\n\t\t\tconst apiKey = 'c00c62a1ac43428cb85addb846c1eef3'\n\t\t\tconst url = `https://newsapi.org/v2/top-headlines?country=ar&category=${categoria}&apiKey=${apiKey}`;\n\n\t\t\tconst resultado = await fetch(url);\n\t\t\tconst noticias = await resultado.json();\n\n\t\t\tguardarNoticias(noticias.articles);\n\t\t}\n\t\tconsultarAPI();\n\t}, [categoria]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header\n\t\t\t\ttitulo='Buscador de Noticias'\n\t\t\t/>\n\n\t\t\t<div className=\"container white\">\n\t\t\t\t<Formulario \n\t\t\t\t\tguardarCategoria={guardarCategoria}\n\t\t\t\t/>\n\n\t\t\t\t<ListadoNoticias\n\t\t\t\t\tnoticias={noticias}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Fragment>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n      \t<App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__sN5Ey\",\"buscador\":\"Formulario_buscador__2ABO4\",\"btn-block\":\"Formulario_btn-block__C2qiV\"};"],"sourceRoot":""}